{"ast":null,"code":"var _jsxFileName = \"E:\\\\newproject\\\\kratika\\\\src\\\\App.js\";\nimport React from 'react'; // import './App.css';\n\nimport { db, auth } from './services/firebase';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fruits: null\n    };\n\n    this.addNewfruits = () => {\n      db.collection('fruits').add({\n        Name: \"Banana\",\n        Imageurl: \"www.google.com\",\n        Description: \"This is Banana tile\"\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      var name = document.getElementById('name').value;\n      var imageurl = document.getElementById('imageurl').value;\n      var description = document.getElementById('description').value; // saveMessage(name, imageurl, description)\n\n      db.collection('fruits').add({\n        Name: name,\n        Imageurl: imageurl,\n        Description: description\n      });\n    };\n  }\n\n  componentDidMount() {\n    db.collection('fruits').get().then(snapshot => {\n      const fruits = [];\n      snapshot.forEach(doc => {\n        const data = doc.data();\n        fruits.push(data);\n      });\n      this.setState({\n        fruits: fruits\n      });\n    }).catch(error => console.log(error));\n  }\n\n  // saveMessage(name, imageurl, description ){\n  //   var newMessageRef = messagesRef.push();\n  //   newMessageRef.set({\n  //     name: name,\n  //     imageurl:imageurl,\n  //     description:description,\n  //   })\n  // }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      classname: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \" Started building the web app \"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, \"Imageurl\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"imageurl\",\n      id: \"imageurl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"Description\",\n      rows: \"3\",\n      id: \"description\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      class: \"full\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(\"script\", {\n      src: \"main.js\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    })), this.state.fruits && this.state.fruits.map(fruits => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }, fruits.Name), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }, fruits.Imageurl), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, fruits.Description));\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["E:/newproject/kratika/src/App.js"],"names":["React","db","auth","App","Component","state","fruits","addNewfruits","collection","add","Name","Imageurl","Description","handleSubmit","e","preventDefault","name","document","getElementById","value","imageurl","description","componentDidMount","get","then","snapshot","forEach","doc","data","push","setState","catch","error","console","log","render","map"],"mappings":"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","sourcesContent":["import React from 'react'\n// import './App.css';\nimport {db,auth} from './services/firebase'\n\n\n\nclass App extends React.Component{\n\n  state ={\n    fruits: null\n  }\n\n  componentDidMount(){\n\n      db.collection('fruits')\n      .get()\n      .then(snapshot =>{\n        const fruits = []\n        snapshot.forEach( doc=>{\n          const data = doc.data()\n          fruits.push(data)\n\n      })\n      this.setState({fruits:fruits })})\n\n      .catch( error => console.log(error))\n  }\n\n \n  addNewfruits =() =>{\n    db.collection('fruits')\n      .add({\n        Name:\"Banana\",\n        Imageurl:\"www.google.com\",\n        Description:\"This is Banana tile\"\n      })\n  }\n   handleSubmit=(e) =>{\n    \n    e.preventDefault()\n\n    var name =document.getElementById('name').value\n    var imageurl =document.getElementById('imageurl').value\n    var description =document.getElementById('description').value\n\n    // saveMessage(name, imageurl, description)\n    db.collection('fruits')\n      .add({\n        Name:name,\n        Imageurl:imageurl,\n        Description:description\n      })\n\n  }\n\n  \n  // saveMessage(name, imageurl, description ){\n  //   var newMessageRef = messagesRef.push();\n  //   newMessageRef.set({\n  //     name: name,\n  //     imageurl:imageurl,\n  //     description:description,\n  \n  //   })\n  // }\n\n  render(){\n    return(\n      \n     <div classname =\"App\" >\n  \n        <h1 > Started building the web app </h1>\n        <form onSubmit = {this.handleSubmit}>\n                <p>\n                    <label>Name</label>\n                    <input type=\"text\" name=\"name\" id=\"name\" required />\n                  </p>\n                  <p>\n                    <label>Imageurl</label>\n                    <input type=\"text\" name=\"imageurl\" id=\"imageurl\" />\n                  </p>\n                  <p>\n                    <label>Description</label>\n                    <textarea name=\"Description\"  rows=\"3\"  id=\"description\" required></textarea>\n                  </p>\n                  <p class=\"full\">\n                    <button type=\"submit\">Submit</button></p>\n\n                    <script src=\"main.js\"></script>\n        </form>\n                {\n          this.state.fruits &&\n          this.state.fruits.map(fruits=>{\n            return(\n              <div>\n                <p>{fruits.Name}</p>\n                <p>{fruits.Imageurl}</p>\n                <p>{fruits.Description}</p>\n              </div>\n            )\n\n            })\n        }\n      </div>\n        \n    )\n  }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}